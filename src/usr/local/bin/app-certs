#!/bin/bash
############
    
JAVA_HOME=${JAVA_HOME:-};
    
function auto_update()
{
    if [[ ${CERT_PATH} != "" ]];then
        get_certs;
        update_os;
        update_jvm;
        cleanup;
    else 
        echo "Cert Updater: CA Path was not defined, skipping OS and JVM. You can set the path using CERT_PATH";
    fi;
}
    
function update_keys()
{
    openssl dhparam -out /etc/ssl/dhparams.pem ${DH_PARAM_SIZE};
    openssl req -newkey rsa:2048 -x509 -nodes -keyout /etc/ssl/server.key -new -out /etc/ssl/server.pem -subj /CN=${CERT_SUBJECT} -sha256 -days 3650;
    PEM_SHA1=$(openssl x509 -noout -fingerprint -sha1 -in /etc/ssl/server.pem | cut -f2 -d"=" | sed "s/://g" | awk '{print tolower($0)}');
    echo "Cert Updater: Keygen finished, Thumbprint: $PEM_SHA1";
}
    
function update_jvm()
{
    if [[ "${JAVA_HOME}" != "" ]];then
        for CA_CRT in /usr/local/share/ca-certificates/*.crt; do
            CA_NAME=$(openssl x509 -noout -subject -nameopt multiline -in $CA_CRT | sed -n 's/ *commonName *= //p');
            CA_EXISTS=$(${JAVA_HOME}/bin/keytool -list -cacerts -storepass changeit -alias "$CA_NAME" | echo $?);
            if [ "$CA_EXISTS" -eq 0 ];then
                ${JAVA_HOME}/bin/keytool -import -trustcacerts -cacerts \
                    -storepass changeit -noprompt -alias "$CA_NAME" -file $CA_CRT >/dev/null 2>&1 \
                    | echo "Cert Updater: Added certificate to cacert, $CA_CRT";
            else 
                echo "Cert Updater: Certificate ${CA_NAME} already exists, not adding";
            fi;
        done;
    else 
        echo "Cert Updater: JAVA_HOME is undefined in environment, nothing to import";
    fi;
}
    
function update_os()
{
    certs=$(ls /usr/local/share/ca-certificates/*.crt 2> /dev/null | wc -l);
    if [ "${certs}" -ne 0 ];then
        update-ca-certificates;
    else
        echo "Cert Updater: No certificates were found to import";
    fi;
}
    
function get_certs()
{
    ishttp='^(http|https)';
    cd /usr/local/share/ca-certificates;
    if [[ "${CERT_PATH}" =~ ${ishttp} ]];then
        wget -q -r -nH -A ${CERT_FILTER} "${CERT_PATH}";
    elif [ -d "${CERT_PATH}" ];then
        cp -R ${CERT_PATH}/${CERT_FILTER} /usr/local/share/ca-certificates/;
    else
        echo "Cert Updater: ${CERT_PATH} does not exist, nothing to import";
    fi;
}
    
function cleanup()
{
    cd /usr/local/share/ca-certificates;
    rm -rf /usr/local/share/ca-certificates/*;
}
    
#Run
if [ -f "/etc/ssl/default.keys" ] || [[ ${CERT_UPDATE_KEYS} == 1 ]];then
    echo "Cert Updater: Generating new key pair";
    rm -f /etc/ssl/default.keys;
    update_keys;
fi;
if [[ ${CERT_AUTO_UPDATE} == 1 ]];then
    echo "Cert Updater: CERT_AUTO_UPDATE is enabled";
    auto_update;
else
    if [[ ${CERT_PATH} != "" ]];then
        get_certs;
        if [[ "${CERT_UPDATE_OS}" == 1 ]];then
            update_os;
        fi;
        if [[ "${CERT_UPDATE_JVM}" == 1 ]];then
            update_jvm;
        fi;
        cleanup;
    else
        echo "Cert Updater: CERT_PATH is not defined, nothing to do";
    fi;
fi;
    
echo "Cert Updater: Finished Updating Certs";
