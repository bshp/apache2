#!/bin/bash

function addDefault()
{
    cp ${APACHE_MODS}/rewrite_default.conf.dist ${APACHE_MODS}/rewrite.conf;
}
    
function addIndex()
{
    cp ${APACHE_MODS}/rewrite_framework.conf.dist ${APACHE_MODS}/rewrite.conf;
    sed -i "s/#FRAMEWORK/${REWRITE_INDEX}/g" ${APACHE_MODS}/rewrite.conf;
}
    
function addExclude()
{
    echo "App Config: REWRITE_EXCLUDE is defined, setting rewrite to ignore the matched pattern ${REWRITE_EXCLUDE}";
    sed -i "s@#REWRITE_EXCLUDE@a$(printf %q "        RewriteRule ${REWRITE_EXCLUDE} - [L]")@g" ${APACHE_MODS}/rewrite.conf;
}
    
function addExtensions()
{
    cp ${APACHE_MODS}/rewrite_extensions.conf.dist ${APACHE_MODS}/rewrite.conf;
    sed -i "s/#EXTENSION/${REWRITE_EXT}/g" ${APACHE_MODS}/rewrite.conf;
}
    
function addCors()
{
    cp ${APACHE_MODS}/headers_cors_json.conf.dist ${APACHE_MODS}/headers.conf;
}
    
#Run
    
echo "App Config: APP_TYPE is ${APP_TYPE}";
    
APP_RUNAS="www-data";
    
if [[ "${APP_TYPE}" == "tomcat" ]];then
    APP_RUNAS="tomcat";
    IP_REGEX=$(echo "${VADC_IP_ADDRESS}" | sed -e 's/\s/\|/g');
    APP_PROXIES=$(echo "${IP_REGEX}" | sed -e 's/\./\\./g');
    APP_OPTS=$(echo 'export JAVA_OPTS="'$JAVA_OPTS $APP_PARAMS'"');
    echo $APP_OPTS > ${CATALINA_HOME}/bin/setenv.sh;
    echo "export VADC_IP_REG=${APP_PROXIES}" >> ${CATALINA_HOME}/bin/setenv.sh;
    chmod -R 0755 ${CATALINA_HOME}/bin/setenv.sh;
    cp ${APACHE_MODS}/jk.conf.dist ${APACHE_MODS}/jk.conf;
    cp ${APACHE_MODS}/jk.load.dist ${APACHE_MODS}/jk.load;
fi;
    
export APP_RUNAS="$APP_RUNAS";
    
if [[ ${REWRITE_SKIP} == 1 ]];then
    echo "App Config: Using default site without rewrite, REWRITE_SKIP defined";
else
    #Enable Rewrite Engine
    sed -i "s/#REWRITE/RewriteEngine On/g" ${APACHE_SITES}/000-default.conf;
    sed -i "s/#REWRITE/RewriteEngine On/g" ${APACHE_SITES}/default-ssl.conf;
    
    if [[ ${REWRITE_DEFAULT} == 1 ]];then
        echo "App Config: REWRITE_DEFAULT is defined, attemting to configure rewrite all requests to SSL enabled site";
        addDefault;
    fi;
    if [[ ${REWRITE_INDEX} != "" ]];then
        echo "App Config: REWRITE_INDEX is defined, attemting to configure rewrite all requests to ${REWRITE_INDEX} to enabled site";
        addIndex;
    fi;
    if [[ ${REWRITE_CORS} == 1 ]];then
        echo "App Config: Adding mod_headers config for JSON to enabled site"
        addCors;
    fi;
    if [[ ${REWRITE_EXT} != "" ]];then
        if [[ ${REWRITE_INDEX} != "" ]];then
            echo "App Config: REWRITE_INDEX is defined, cannot add both extension and index rewrite, using REWRITE_INDEX";
        else
            echo "App Config: REWRITE_EXT is defined, attemting to configure rewrite extensions ${REWRITE_EXT} to enabled site"
            addExtensions;
        fi;
    fi;
    if [[ ${REWRITE_EXCLUDE} != "" ]];then
        echo "App Config: REWRITE_EXCLUDE is defined, attemting to configure rewrite with exclude pattern ${REWRITE_EXCLUDE} to enabled site"
        addExclude;
    fi;
fi;
    
# Test config and print results
echo "App Config: Data directory for application is ${APP_DATA}";
    
if [[ "${APP_TYPE}" == "apache" ]];then
    CFG_TEST=$(apachectl configtest 2>&1);
    CFG_PASS="Syntax OK";
    CFG_RESULT=$(echo "$CFG_TEST" | grep "$CFG_PASS");
    if [ -z "$CFG_RESULT" ];then
        echo "App Config: Test FAILED, reverting changes";
        echo "App Config: Result: $CFG_TEST";
        if [[ -f ${APACHE_MODS}/rewrite.conf ]];then
            mv ${APACHE_MODS}/rewrite.conf ./rewrite.conf.failed;
        fi;
    else
        echo "App Config: Apache Config Test PASSED, using updated configuration";
        echo "App Config: Apache2 remoteip configured with [address: ${VADC_IP_ADDRESS}, header: ${VADC_IP_HEADER}]";
    fi;
fi;
    
if [[ "${APP_TYPE}" == "tomcat" ]];then
    CFG_TEST=$("${CATALINA_HOME}/bin/catalina.sh" configtest 2>&1);
    CFG_PASS="INFO: Server initialization in";
    CFG_RESULT=$(echo "$CFG_TEST" | grep "$CFG_PASS");
    if [[ -z $CFG_RESULT ]];then
        echo "App Config: Tomcat Test FAILED, unrecoverable";
        echo "App Config: Result: $CFG_TEST";
        exit 1;
    fi;
    echo "App Config: Tomcat RemoteIpValve configured with [internalProxies: ${APP_PROXIES}, remoteIpHeader: ${VADC_IP_HEADER}]";
    echo "App Config: Configured JAVA_OPTS with ${APP_OPTS}";
fi;
    
echo "App Config: Initialization complete"
echo "App Config: You can use APP_RUNAS variable in your entrypoint to run the app as [ ${APP_RUNAS} ] OR risk it for the biscuit and run as root"; 
    
#apachectl -k start -D FOREGROUND
