#!/bin/bash

APP_CERTS=0;
APP_CONFIG=0;
APP_UPDATE=0;
APP_START=0;
APP_CMD=/usr/local/bin;
APACHE_BIN=/usr/sbin/apachectl;
TOMCAT_BIN=${CATALINA_HOME}/bin/catalina.sh;
    
function show_help()
{
   echo "Configures/Runs the container"
   echo
   echo "Syntax: app-cmd --certs --config --update --run";
   echo
   echo "Requires: The enviroment variable name";
   echo
   echo "Options:";
   echo "--help      Print Help";
   echo "--certs     Update Certificates";
   echo "  -Requires: CERT_PATH";
   echo "--config    Inititialize Configs";
   echo "--update    Deploy/Update the application";
   echo "  -Requires: APP_NAME, APP_UPDATE_PATH";
   echo "--run       Start/Run Container";
   exit 0;
}
    
#Set command option
for cmds in "$@"; do
    shift
    case "$cmds" in
        '--help')   show_help;;
        '--certs')  APP_CERTS=1;;
        '--config') APP_CONFIG=1;;
        '--update') APP_UPDATE=1;;
        '--run')    APP_START=1;;
        *)          echo "Invalid option specified, check syntax and requirements"; echo; show_help;;
    esac;
done;
    
#Reload Environment
while read -r env; do 
    export "$env";
done;
    
#Run
if [[ $APP_CERTS == 1 ]];then
    $APP_CMD/cert-updater;
fi;
if [[ $APP_CONFIG == 1 ]];then
    $APP_CMD/app-config;
fi;
if [[ $APP_UPDATE == 1 ]];then
    $APP_CMD/app-updater;
fi;
if [[ $APP_START == 1 ]];then
    if [[ "${APP_TYPE}" == "apache" ]];then
        $APACHE_BIN -k start -D FOREGROUND;
    fi;
    if [[ "${APP_TYPE}" == "tomcat" ]];then
        $APACHE_BIN -k start;
        su ${APP_RUNAS} -c $TOMCAT_BIN run;
    fi;
else
    echo "Not starting container, use --run to execute";
fi;
